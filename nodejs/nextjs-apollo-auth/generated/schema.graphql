### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Article implements Node {
  author: Profile!
  body: String!
  createdAt: DateTime!
  description: String!
  favorited: Boolean!
  favoritesCount: Int!
  id: Int!
  slug: String!
  tagList: [String!]!
  title: String!
  updatedAt: DateTime!
}

input ArticleInput {
  body: String!
  description: String!
  tagList: [String!]!
  title: String!
}

type AuthUser implements BaseUser & Node {
  bio: String
  email: String!
  id: Int!
  image: String
  token: String
  username: String!
}

interface BaseUser {
  bio: String
  image: String
  username: String!
}

type Comment implements Node {
  author: Profile!
  body: String!
  createdAt: DateTime!
  id: Int!
  updatedAt: DateTime!
}

input CommentInput {
  body: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Mutation {
  createArticle(input: ArticleInput!): Article!
  createComment(input: CommentInput!, slug: String!): Comment!
  deleteArticle(slug: String!): Article!
  deleteComment(id: Int!): Comment!
  favorite(slug: String!): Article!
  follow(username: String!): Profile!
  login(input: UserLoginInput!): AuthUser!
  signup(input: UserSignupInput!): AuthUser
  unFollow(username: String!): Profile!
  unfavorite(slug: String!): Article!
  updateArticle(input: ArticleInput!, slug: String!): Article!
  updateUser(input: UserUpdateInput!): AuthUser!
}

interface Node {
  id: Int!
}

type Profile implements BaseUser {
  bio: String
  following: Boolean!
  image: String
  username: String!
}

type Query {
  article(slug: String!): Article
  articles(author: String, cursor: Int, favorited: String, limit: Int = 10, offset: Int = 0, tag: String): [Article!]!
  articlesCount(author: String, favorited: String, tag: String): Int!
  checkEmail(email: String!): String
  checkUsername(username: String!): String
  comments(articleId: Int!, cursor: Int, limit: Int = 20, offset: Int = 0): [Comment!]!
  currentUser: AuthUser!
  feed(cursor: Int, limit: Int = 10, offset: Int = 0): [Article!]!
  feedCount: Int!
  profile(username: String!): Profile
  tags: [String!]!
}

input UserLoginInput {
  email: String!
  password: String!
}

input UserSignupInput {
  email: String!
  password: String!
  username: String!
}

input UserUpdateInput {
  bio: String
  email: String!
  image: String
  password: String
  username: String!
}